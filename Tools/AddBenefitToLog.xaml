<Activity mc:Ignorable="sap sap2010" x:Class="AddBenefitToLog" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_BenefitAmount" Type="InArgument(x:Double)" />
    <x:Property Name="in_BenefitUnit" Type="InArgument(x:String)" />
    <x:Property Name="in_BenefitReason" Type="InArgument(x:String)" />
    <x:Property Name="in_BenefitReference" Type="InArgument(x:String)" />
    <x:Property Name="in_BenefitUnitOther" Type="InArgument(x:String)" />
    <x:Property Name="in_ProcessName" Type="InArgument(x:String)" />
    <x:Property Name="in_ProcessVersion" Type="InArgument(x:String)" />
    <x:Property Name="in_JobID" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1970,1081</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>AddBenefitToLog_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="AddBenefitToLog" sap:VirtualizedContainerService.HintSize="568,833" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Only log if published package (in Production)" sap:VirtualizedContainerService.HintSize="526,741" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[in_BenefitUnit = &quot;other&quot;]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Then>
          <ui:AddLogFields DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
            <ui:AddLogFields.Fields>
              <InArgument x:TypeArguments="x:Double" x:Key="benefit_amount">
                <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="in_BenefitAmount" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="benefit_unit">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitUnit" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="benefit_reason">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitReason" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="benefit_reference">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitReference" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="benefit_unit_other">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitUnitOther" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="process_name">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ProcessName" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="process_version">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ProcessVersion" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="job_id">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_JobID" />
              </InArgument>
            </ui:AddLogFields.Fields>
          </ui:AddLogFields>
        </If.Then>
        <If.Else>
          <ui:AddLogFields DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
            <ui:AddLogFields.Fields>
              <InArgument x:TypeArguments="x:Double" x:Key="benefit_amount">
                <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="in_BenefitAmount" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="benefit_unit">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitUnit" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="benefit_reason">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitReason" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="benefit_reference">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitReference" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="process_name">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ProcessName" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="process_version">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ProcessVersion" />
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="job_id">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_JobID" />
              </InArgument>
            </ui:AddLogFields.Fields>
          </ui:AddLogFields>
        </If.Else>
      </If>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Benefit Realisation Tracker&quot;]" />
      <ui:RemoveLogFields DisplayName="Remove Log Fields" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="RemoveLogFields_2">
        <ui:RemoveLogFields.Fields>
          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String">benefit_amount</Literal>
            </InArgument>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String">benefit_unit</Literal>
            </InArgument>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String">benefit_reason</Literal>
            </InArgument>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String">benefit_reference</Literal>
            </InArgument>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String">process_name</Literal>
            </InArgument>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String">process_version</Literal>
            </InArgument>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String">job_id</Literal>
            </InArgument>
          </scg:List>
        </ui:RemoveLogFields.Fields>
      </ui:RemoveLogFields>
      <If Condition="[in_BenefitUnit = &quot;other&quot;]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Then>
          <ui:RemoveLogFields DisplayName="Remove Log Fields" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="RemoveLogFields_1">
            <ui:RemoveLogFields.Fields>
              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String">benefit_unit_other</Literal>
                </InArgument>
              </scg:List>
            </ui:RemoveLogFields.Fields>
          </ui:RemoveLogFields>
        </If.Then>
      </If>
    </Sequence>
  </Sequence>
</Activity>