<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_BenefitAmount="0" this:Main.in_BenefitUnit="minutes" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:uga="clr-namespace:UiPathTeam.GetProcessInfo.Activities;assembly=UiPathTeam.GetProcessInfo.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_BenefitAmount" Type="InArgument(x:Double)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_BenefitUnit" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_BenefitReason" Type="InArgument(x:String)" />
    <x:Property Name="in_BenefitReference" Type="InArgument(x:String)" />
    <x:Property Name="in_BenefitUnitOther" Type="InArgument(x:String)" />
  </x:Members>
  <this:Main.in_BenefitReason>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Main.in_BenefitReason>
  <this:Main.in_BenefitReference>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Main.in_BenefitReference>
  <this:Main.in_BenefitUnitOther>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Main.in_BenefitUnitOther>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1970,2382</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="52">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPathTeam.SharedContext.Activities</x:String>
      <x:String>UiPathTeam.GetProcessInfo.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="54">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharedContext.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.GetProcessInfo.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Track Benefits Main" sap:VirtualizedContainerService.HintSize="1026,2317" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="CheckBenefitTrackProduction" />
      <Variable x:TypeArguments="x:String" Name="CurrentDirectory" />
      <Variable x:TypeArguments="x:String" Name="benefitDestination" />
      <Variable x:TypeArguments="x:String" Name="jobID" />
      <Variable x:TypeArguments="x:String" Name="processVersion" />
      <Variable x:TypeArguments="x:String" Name="workflowPath" />
      <Variable x:TypeArguments="x:String" Name="benefitsAsset">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">BenefitDestination</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="ProcessName" />
      <Variable x:TypeArguments="x:String" Name="benefitsFolder">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">Benefit.Tracking</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="benefitsQueue">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">BenefitDetails</Literal>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="984,514" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[benefitsAsset]" DisplayName="Get Asset" FolderPath="[benefitsFolder]" sap:VirtualizedContainerService.HintSize="444,137" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[benefitDestination]</OutArgument>
          </ui:GetRobotAsset.Value>
        </ui:GetRobotAsset>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,352" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[&quot;Benefit Assest is not defined on Orchestrator&quot;]" />
              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[benefitDestination]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Log</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[in_BenefitUnit]" sap:VirtualizedContainerService.HintSize="984,376" sap2010:WorkflowViewState.IdRef="Switch`1_3">
      <Switch.Default>
        <Throw Exception="[new Exception(&quot;Invalid unit. Please use seconds, minutes, hours, USD, EUR, JPY or other.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
      </Switch.Default>
      <If x:Key="other" Condition="[String.IsNullOrEmpty(in_BenefitUnitOther)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <Throw Exception="[new Exception(&quot;Invalid unit. Please use a non-empty benefit_unit_other.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
        </If.Then>
      </If>
      <x:Null x:Key="seconds" />
      <x:Null x:Key="minutes" />
      <x:Null x:Key="hours" />
      <x:Null x:Key="USD" />
      <x:Null x:Key="EUR" />
      <x:Null x:Key="JPY" />
    </Switch>
    <Assign sap:VirtualizedContainerService.HintSize="984,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[CurrentDirectory]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory]</InArgument>
      </Assign.Value>
    </Assign>
    <uga:GetProcessInfoActivity ContinueOnError="{x:Null}" DisplayName="Get Process info" sap:VirtualizedContainerService.HintSize="984,22" sap2010:WorkflowViewState.IdRef="GetProcessInfoActivity_1" JobId="[jobID]" ProcessName="[ProcessName]" ProcessVersion="[processVersion]" WorkflowFilePath="[workflowPath]" />
    <Assign sap:VirtualizedContainerService.HintSize="984,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[CheckBenefitTrackProduction]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">[workflowPath.Contains(".nuget") and workflowPath.Contains("lib") and workflowPath.Contains("net")]</InArgument>
      </Assign.Value>
    </Assign>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="984,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Process Name: &quot; &amp; ProcessName &amp; Environment.NewLine &amp; &quot;Process Version: &quot; &amp; processVersion &amp; Environment.NewLine &amp; &quot;Job ID: &quot; &amp; jobID &amp; Environment.NewLine &amp; &quot;Workflow Path: &quot; &amp; workflowPath]" />
    <If Condition="[CheckBenefitTrackProduction]" sap:VirtualizedContainerService.HintSize="984,892" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="563,744" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[benefitDestination=&quot;Log&quot; or benefitDestination=&quot;Both&quot;]" sap:VirtualizedContainerService.HintSize="521,260" sap2010:WorkflowViewState.IdRef="If_6">
            <If.Then>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Tools\AddBenefitToLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Double" x:Key="in_BenefitAmount">[in_BenefitAmount]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_BenefitUnit">[in_BenefitUnit]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_BenefitReason">[in_BenefitReason]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_BenefitReference">[in_BenefitReference]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_BenefitUnitOther">[in_BenefitUnitOther]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </If.Then>
          </If>
          <If Condition="[benefitDestination=&quot;Queue&quot; or benefitDestination=&quot;Both&quot;]" sap:VirtualizedContainerService.HintSize="521,352" sap2010:WorkflowViewState.IdRef="If_7">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Tools\AddBenefitToQueue.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:Double" x:Key="in_BenefitAmount">
                      <mva:VisualBasicValue x:TypeArguments="x:Double" ExpressionText="in_BenefitAmount" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_BenefitUnit">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitUnit" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_BenefitReason">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitReason" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_BenefitReference">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitReference" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_BenefitUnitOther">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_BenefitUnitOther" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="benefitsFolder">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="benefitsFolder" />
                    </InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="benefitsQueue">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="benefitsQueue" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,314" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="[&quot;Benefit Amount: &quot; &amp; in_BenefitAmount &amp; Environment.NewLine &amp;&#xD;&#xA;&quot;Benefit Unit: &quot; &amp; in_BenefitUnit &amp; Environment.NewLine &amp;&#xD;&#xA;&quot;Benefit Reason: &quot; &amp; in_BenefitReason &amp; Environment.NewLine &amp;&#xD;&#xA;&quot;Benefit Reference: &quot; &amp; in_BenefitReference &amp; Environment.NewLine &amp;&#xD;&#xA;&quot;Benefit Unit Other: &quot; &amp; in_BenefitUnitOther]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;Benefit Realisation NOT sent&quot;]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>